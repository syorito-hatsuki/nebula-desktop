name: Cross-Platform Release

on:
  push:
    branches: [ "master" ]
    paths:
      - gradle.properties
  workflow_dispatch:

permissions:
  contents: write

jobs:
  # -------------------- #
  # 1. Extract version
  # -------------------- #
  version:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version from gradle.properties
        id: get-version
        run: |
          VERSION=$(grep -oP '^app.version=\K.*' gradle.properties)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Version: $VERSION"

  # -------------------- #
  # 2. Linux Build
  # -------------------- #
  build-linux:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - run: ./gradlew :composeApp:packageReleaseDistributionForCurrentOS
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            composeApp/build/compose/releases/main-release/deb/*.deb
            composeApp/build/compose/releases/main-release/rpm/*.rpm

  # -------------------- #
  # 3. macOS Build
  # -------------------- #
  # build-macos:
  #   runs-on: macos-latest
  #   needs: version
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-java@v4
  #       with:
  #         distribution: temurin
  #         java-version: 21
  #     - run: ./gradlew :composeApp:packageReleaseDistributionForCurrentOS
  #     - name: Upload macOS artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: macos-build
  #         path: |
  #           composeApp/build/compose/releases/main-release/dmg/*.dmg
  #           composeApp/build/compose/releases/main-release/pkg/*.pkg

  # -------------------- #
  # 4. Windows Build
  # -------------------- #
  build-windows:
    runs-on: windows-latest
    needs: version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - run: ./gradlew :composeApp:packageReleaseDistributionForCurrentOS
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            composeApp/build/compose/releases/main-release/exe/*.exe
            composeApp/build/compose/releases/main-release/msi/*.msi

  # -------------------- #
  # 5. GitHub Release
  # -------------------- #
  release:
    runs-on: ubuntu-latest
    needs: [version, build-linux, build-macos, build-windows]
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: all-builds

      - name: Show downloaded files
        run: ls -R all-builds

      - name: Create / Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Nebula Desktop ${{ needs.version.outputs.app_version }}
          tag_name: ${{ needs.version.outputs.app_version }}
          files: all-builds/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
