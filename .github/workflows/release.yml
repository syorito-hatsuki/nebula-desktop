name: Cross-Platform Release

on:
  push:
    branches: [ "master" ]
    paths:
      - gradle.properties
  workflow_dispatch:

permissions:
  contents: write

jobs:
  # -------------------- #
  # 1. Extract version
  # -------------------- #
  version:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Get version from gradle.properties
        id: get-version
        run: |
          VERSION=$(grep -oP '^app.version=\K.*' gradle.properties)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "📦 Version: $VERSION"

  # -------------------- #
  # 2. Linux Build
  # -------------------- #
  build-linux:
    runs-on: ubuntu-latest
    needs: version
    outputs:
      files: ${{ steps.set-files.outputs.files }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build Linux Distributions
        run: ./gradlew :composeApp:packageReleaseDistributionForCurrentOS

      - name: Set Linux files
        id: set-files
        run: |
          FILES=$(find composeApp/build/compose/releases/main-release -type f \( -name "*.deb" -o -name "*.rpm" \))
          if [ -z "$FILES" ]; then
            echo "❌ No Linux files found!"
            exit 1
          fi
          echo "✅ Found Linux files:"
          echo "$FILES"
          echo "files=$(echo $FILES | tr '\n' ' ')" >> $GITHUB_OUTPUT

  # -------------------- #
  # 3. macOS Build
  # -------------------- #
  build-macos:
    runs-on: macos-latest
    needs: version
    outputs:
      files: ${{ steps.set-files.outputs.files }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build macOS Distributions
        run: ./gradlew :composeApp:packageReleaseDistributionForCurrentOS

      - name: Set macOS files
        id: set-files
        run: |
          FILES=$(find composeApp/build/compose/releases/main-release -type f \( -name "*.dmg" -o -name "*.pkg" \))
          if [ -z "$FILES" ]; then
            echo "❌ No macOS files found!"
            exit 1
          fi
          echo "✅ Found macOS files:"
          echo "$FILES"
          echo "files=$(echo $FILES | tr '\n' ' ')" >> $GITHUB_OUTPUT

  # -------------------- #
  # 4. Windows Build
  # -------------------- #
  build-windows:
    runs-on: windows-latest
    needs: version
    outputs:
      files: ${{ steps.set-files.outputs.files }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build Windows Distributions
        run: ./gradlew :composeApp:packageReleaseDistributionForCurrentOS

      - name: Set Windows files
        id: set-files
        run: |
          powershell -Command "
            Set-StrictMode -Version Latest
            $ErrorActionPreference = 'Stop'
            $files = Get-ChildItem -Recurse 'composeApp/build/compose/releases/main-release' -Include *.exe,*.msi | ForEach-Object { $_.FullName }
            if ($files.Count -eq 0) { throw '❌ No Windows files found!' }
            Write-Host '✅ Found Windows files:'
            Write-Host ($files -join '\n')
            Add-Content -Path $env:GITHUB_OUTPUT -Value ('files=' + ($files -join ' '))
          "

  # -------------------- #
  # 5. GitHub Release
  # -------------------- #
  release:
    runs-on: ubuntu-latest
    needs: [version, build-linux, build-macos, build-windows]

    steps:
      - uses: actions/checkout@v4

      - name: Collect all built files
        id: collect
        run: |
          FILES="${{ needs.build-linux.outputs.files }} ${{ needs.build-macos.outputs.files }} ${{ needs.build-windows.outputs.files }}"
          echo "✅ Combined file list:"
          echo "$FILES"
          echo "files=$FILES" >> $GITHUB_OUTPUT

      - name: Create / Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Nebula Desktop ${{ needs.version.outputs.app_version }}
          tag_name: ${{ needs.version.outputs.app_version }}
          files: ${{ steps.collect.outputs.files }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}